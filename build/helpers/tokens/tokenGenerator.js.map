{"version":3,"file":"tokenGenerator.js","names":["dotenv","config","payload","expiresIn","isValidPayload","Object","keys","length","jwt","sign","process","env","SECRET_KEY"],"sources":["../../../src/helpers/tokens/tokenGenerator.js"],"sourcesContent":["import jwt from 'jsonwebtoken';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\n/**\n * @param {object} payload the payload to encode the token\n * @param {object} expiresIn the expiration time of the token\n * @returns {string} the generated token\n */\nexport default (payload = {}, expiresIn = { expiresIn: '1d' }) => {\n  let isValidPayload = true;\n\n  if (typeof payload === 'number') {\n    isValidPayload = false;\n  } else if (payload === null) {\n    isValidPayload = false;\n  } else if (typeof payload === 'object' && !Object.keys(payload).length) {\n    isValidPayload = false;\n  }\n\n  return isValidPayload ? jwt.sign(payload, process.env.SECRET_KEY, expiresIn) : null;\n};\n"],"mappings":";;;;;;;;AAAA;AACA;AAEAA,kBAAM,CAACC,MAAM,EAAE;;AAEf;AACA;AACA;AACA;AACA;AAJA,eAKe,oBAAmD;EAAA,IAAlDC,OAAO,uEAAG,CAAC,CAAC;EAAA,IAAEC,SAAS,uEAAG;IAAEA,SAAS,EAAE;EAAK,CAAC;EAC3D,IAAIC,cAAc,GAAG,IAAI;EAEzB,IAAI,OAAOF,OAAO,KAAK,QAAQ,EAAE;IAC/BE,cAAc,GAAG,KAAK;EACxB,CAAC,MAAM,IAAIF,OAAO,KAAK,IAAI,EAAE;IAC3BE,cAAc,GAAG,KAAK;EACxB,CAAC,MAAM,IAAI,yBAAOF,OAAO,MAAK,QAAQ,IAAI,CAACG,MAAM,CAACC,IAAI,CAACJ,OAAO,CAAC,CAACK,MAAM,EAAE;IACtEH,cAAc,GAAG,KAAK;EACxB;EAEA,OAAOA,cAAc,GAAGI,wBAAG,CAACC,IAAI,CAACP,OAAO,EAAEQ,OAAO,CAACC,GAAG,CAACC,UAAU,EAAET,SAAS,CAAC,GAAG,IAAI;AACrF,CAAC;AAAA"}