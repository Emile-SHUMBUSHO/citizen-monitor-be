{"version":3,"file":"findAndCount.js","names":["Model","condition","include","limit","offset","order","meta","db","findAndCountAll","where","logging","raw","response","rows","count"],"sources":["../../../src/database/queries/findAndCount.js"],"sourcesContent":["import db from '../models'\nimport { Op } from 'sequelize'\n/**\n * @param {object} modal\n * @returns {object} an object containing the information of the user or null\n */\n\nexport default async (\n  Model,\n  condition = {},\n  include = null,\n  limit,\n  offset,\n  order\n) => {\n  const meta = {}\n  order = order || [['createdAt', 'DESC']]\n  try {\n    const response = await db[Model].findAndCountAll(\n      {\n        where: condition,\n        include,\n        order,\n        limit,\n        offset,\n      },\n      { logging: false, raw: true }\n    )\n    return { response: response.rows, meta: { count: response.count || null } }\n  } catch (error) {\n    return error\n  }\n}\n"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;EAAA,yFAKe,iBACbA,KAAK;IAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;MAAA;QAAA;UAAA;YACLC,SAAS,2DAAG,CAAC,CAAC;YACdC,OAAO,2DAAG,IAAI;YACdC,KAAK;YACLC,MAAM;YACNC,KAAK;YAECC,IAAI,GAAG,CAAC,CAAC;YACfD,KAAK,GAAGA,KAAK,IAAI,CAAC,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;YAAA;YAAA;YAAA,OAEfE,kBAAE,CAACP,KAAK,CAAC,CAACQ,eAAe,CAC9C;cACEC,KAAK,EAAER,SAAS;cAChBC,OAAO,EAAPA,OAAO;cACPG,KAAK,EAALA,KAAK;cACLF,KAAK,EAALA,KAAK;cACLC,MAAM,EAANA;YACF,CAAC,EACD;cAAEM,OAAO,EAAE,KAAK;cAAEC,GAAG,EAAE;YAAK,CAAC,CAC9B;UAAA;YATKC,QAAQ;YAAA,iCAUP;cAAEA,QAAQ,EAAEA,QAAQ,CAACC,IAAI;cAAEP,IAAI,EAAE;gBAAEQ,KAAK,EAAEF,QAAQ,CAACE,KAAK,IAAI;cAAK;YAAE,CAAC;UAAA;YAAA;YAAA;YAAA;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAI9E;EAAA;IAAA;EAAA;AAAA;AAAA"}