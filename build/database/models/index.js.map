{"version":3,"file":"index.js","names":["fs","require","path","Sequelize","envConfigs","basename","__filename","env","process","NODE_ENV","config","db","sequelize","url","database","username","password","readdirSync","__dirname","filter","file","indexOf","slice","forEach","model","join","DataTypes","name","Object","keys","modelName","associate","module","exports"],"sources":["../../../src/database/models/index.js"],"sourcesContent":["const fs = require('fs');\nconst path = require('path');\nconst Sequelize = require('sequelize');\nconst envConfigs = require('../../config/dbConfig.js');\n\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || 'development';\nconst config = envConfigs[env];\nconst db = {};\n\nlet sequelize;\nif (config.url) {\n  sequelize = new Sequelize(config.url, config);\n} else {\n  sequelize = new Sequelize(\n    config.database,\n    config.username,\n    config.password,\n    config\n  );\n}\n\nfs.readdirSync(__dirname)\n  .filter((file) => {\n    return (\n      file.indexOf('.') !== 0 && file !== basename && file.slice(-3) === '.js'\n    );\n  })\n  .forEach((file) => {\n    const model = require(path.join(__dirname, file)).default(\n      sequelize,\n      Sequelize.DataTypes\n    );\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach((modelName) => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nmodule.exports = db;\n\n// 'use strict';\n\n// const fs = require('fs');\n// const path = require('path');\n// const Sequelize = require('sequelize');\n// const basename = path.basename(__filename);\n// const env = process.env.NODE_ENV || 'development';\n// const config = require(__dirname + '/../config')[env];\n// const db = {};\n\n// let sequelize;\n// if (config.use_env_variable) {\n//   sequelize = new Sequelize(process.env[config.use_env_variable], config);\n// } else {\n//   sequelize = new Sequelize(config.database, config.username, config.password, config);\n// }\n\n// fs\n//   .readdirSync(__dirname)\n//   .filter(file => {\n//     return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');\n//   })\n//   .forEach(file => {\n//     const model = sequelize['import'](path.join(__dirname, file));\n//     db[model.name] = model;\n//   });\n\n// Object.keys(db).forEach(modelName => {\n//   if (db[modelName].associate) {\n//     db[modelName].associate(db);\n//   }\n// });\n\n// db.sequelize = sequelize;\n// db.Sequelize = Sequelize;\n\n// module.exports = db;\n"],"mappings":";;AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACxB,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,IAAME,SAAS,GAAGF,OAAO,CAAC,WAAW,CAAC;AACtC,IAAMG,UAAU,GAAGH,OAAO,CAAC,0BAA0B,CAAC;AAEtD,IAAMI,QAAQ,GAAGH,IAAI,CAACG,QAAQ,CAACC,UAAU,CAAC;AAC1C,IAAMC,GAAG,GAAGC,OAAO,CAACD,GAAG,CAACE,QAAQ,IAAI,aAAa;AACjD,IAAMC,MAAM,GAAGN,UAAU,CAACG,GAAG,CAAC;AAC9B,IAAMI,EAAE,GAAG,CAAC,CAAC;AAEb,IAAIC,SAAS;AACb,IAAIF,MAAM,CAACG,GAAG,EAAE;EACdD,SAAS,GAAG,IAAIT,SAAS,CAACO,MAAM,CAACG,GAAG,EAAEH,MAAM,CAAC;AAC/C,CAAC,MAAM;EACLE,SAAS,GAAG,IAAIT,SAAS,CACvBO,MAAM,CAACI,QAAQ,EACfJ,MAAM,CAACK,QAAQ,EACfL,MAAM,CAACM,QAAQ,EACfN,MAAM,CACP;AACH;AAEAV,EAAE,CAACiB,WAAW,CAACC,SAAS,CAAC,CACtBC,MAAM,CAAC,UAACC,IAAI,EAAK;EAChB,OACEA,IAAI,CAACC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAID,IAAI,KAAKf,QAAQ,IAAIe,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK;AAE5E,CAAC,CAAC,CACDC,OAAO,CAAC,UAACH,IAAI,EAAK;EACjB,IAAMI,KAAK,GAAGvB,OAAO,CAACC,IAAI,CAACuB,IAAI,CAACP,SAAS,EAAEE,IAAI,CAAC,CAAC,WAAQ,CACvDR,SAAS,EACTT,SAAS,CAACuB,SAAS,CACpB;EACDf,EAAE,CAACa,KAAK,CAACG,IAAI,CAAC,GAAGH,KAAK;AACxB,CAAC,CAAC;AAEJI,MAAM,CAACC,IAAI,CAAClB,EAAE,CAAC,CAACY,OAAO,CAAC,UAACO,SAAS,EAAK;EACrC,IAAInB,EAAE,CAACmB,SAAS,CAAC,CAACC,SAAS,EAAE;IAC3BpB,EAAE,CAACmB,SAAS,CAAC,CAACC,SAAS,CAACpB,EAAE,CAAC;EAC7B;AACF,CAAC,CAAC;AAEFA,EAAE,CAACC,SAAS,GAAGA,SAAS;AACxBD,EAAE,CAACR,SAAS,GAAGA,SAAS;AAExB6B,MAAM,CAACC,OAAO,GAAGtB,EAAE;;AAEnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA"}